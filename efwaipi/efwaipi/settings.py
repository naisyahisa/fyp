"""
Django settings for efwaipi project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path, PureWindowsPath
from django import apps
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# C:\Users\LENOVO\projects\efwaipi
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=@#*wnma7208ssg-n)o#b&g1uiw$7n0s^-%$wktqyavk%zyuww'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
# MIGRATE command will look into these & create db
# according to the db settings in mysite/settings.py
INSTALLED_APPS = [
    'blog.apps.BlogConfig',
    'users.apps.UsersConfig',
    'crispy_forms',
    'bootstrap4',
    'django.contrib.admin', # Required for helpdesk admin/maintenance
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    #handling static files: images, css etc
    'django.contrib.staticfiles',
    'rest_framework',
    #configure cors to accept requests from localhost:8081
    'corsheaders',
]

# request and response processing
# callable that takes a get_response callable and returns a middleware 
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    #listen in on responses for cors
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    #accessing the request.POST
    'django.middleware.csrf.CsrfViewMiddleware',
    #store the authenticated user in the session, run after SessionMiddleWare
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#if true, all origins will be accepted (not use the whitelist below). Default to False.
CORS_ORIGIN_ALLOW_ALL = False
#list of origins that are authorized to make cross-site HTTP requests. Default to [].
CORS_ORIGIN_WHITELIST = (
    'http://localhost:8081',
)
# here, when a request of url is made for the 1st time
ROOT_URLCONF = 'efwaipi.urls'

TEMPLATES = [
    {   #configure a Django template engine
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        #the engines look for templates in the templates subdirectory
        'APP_DIRS': True,
        #
        'OPTIONS': {
            #a list, dotted python paths to callable
            'context_processors': [
                #debug is set to true, & sql_queries dict rep. every sql queries has happened and how long it took
                'django.template.context_processors.debug',
                #RequestContext will contain variable request = current HttpRequest
                'django.template.context_processors.request',
                #user & permission that current has 
                'django.contrib.auth.context_processors.auth',
                #RequestContext = messages (strings) & DEFAULT_MESSAGE_LEVELS- 
                #DEBUG: 10, INFO:20, SUCCESS:25, WARNING:30, ERROR: 40
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'efwaipi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': str(BASE_DIR / 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'testdb',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        "OPTIONS": {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
            'charset':'utf8mb4',
            "autocommit": True,
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
# PROJECT_PATH = os.path.abspath(os.path.dirname(__name__))
# print(BASE_DIR)
# C:\Users\LENOVO\projects\efwaipi
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'blog\\static'),
    # os.path.join(PROJECT_PATH, 'blog\\static'),
]
# print(STATICFILES_DIRS)
# ['C:\\Users\\LENOVO\\projects\\efwaipi\\blog\\static'] 

#default directory for django to store images, in file system not the database
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') 
#public url of directory, a ccess media through browser
MEDIA_URL = '/media/' 

CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_REDIRECT_URL = 'blog-home'
LOGIN_URL = 'login'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

